@model TaskManager.Dto.TaskDto

@{
    ViewData["Title"] = "Create";
}

<style>
    /* Video container to ensure full-screen background */
    .video-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        z-index: -1; /* Puts video behind all content */
    }

        /* Ensure the video takes up the entire screen */
        .video-background video {
            min-width: 100%;
            min-height: 100%;
            object-fit: cover; /* Ensures the video covers the screen */
        }

    /* Form container styling */
    .form-container {
        position: relative;
        z-index: 1; /* Ensures form appears above video */
        background: rgba(255, 255, 255, 0.8); /* Slight transparency for readability */
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        max-width: 400px;
        width: 100%;
    }

        .form-container h1 {
            text-align: center;
        }
</style>

<!-- Video Background -->
<div class="video-background">
    <video autoplay loop muted>
        <source src="~/WhatsApp Video 2025-04-27 at 1.40.06 AM.mp4" type="video/mp4">
        Your browser does not support the video tag.
    </video>
</div>

<!-- Form Container -->
<div class="d-flex justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="form-container">
        <h1>Create Task</h1>
        <hr />

        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Priority" class="control-label"></label>
                <select asp-for="Priority" class="form-control" asp-items="Model.PriorityList">
                    <option value="">-- Select Priority --</option>
                </select>
                <span asp-validation-for="Priority" class="text-danger"></span>
            </div>

            @if (Model.Users?.Count > 0)
            {
                <div class="form-group">
                    <label asp-for="UserId" class="control-label"></label>
                    <select asp-for="UserId" class="form-control" asp-items="Model.Users">
                        <option value="">-- Select User --</option>
                    </select>
                    <span asp-validation-for="UserId" class="text-danger"></span>
                </div>
            }
            else
            {
                <p class="text-danger">User list could not be loaded.</p>
            }

            @if (Model.Categories?.Count > 0)
            {
                <div class="form-group">
                    <label asp-for="CategoryId" class="control-label"></label>
                    <select asp-for="CategoryId" class="form-control" asp-items="Model.Categories">
                        <option value="">-- Select Category --</option>
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
            }
            else
            {
                <p class="text-danger">Category list could not be loaded.</p>
            }

            <div class="form-group mt-2">
                <input type="submit" value="Create" class="btn btn-success" />
                <a class="btn btn-primary float-end" asp-action="Index">Back to List</a>
            </div>

        </form>
    </div>
</div>

<div class="mt-2">
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
